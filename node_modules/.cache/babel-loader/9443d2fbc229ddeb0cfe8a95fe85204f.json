{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\romai\\\\Documents\\\\Cours\\\\IHM\\\\Projet_M2\\\\InstaSound\\\\InstaSound\\\\src\\\\pages\\\\Search.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { IonAlert, IonButton, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonCardTitle, IonContent, IonHeader, IonImg, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport { shareAlbum } from '../FirebaseConfig';\nimport './Search.css';\nimport { toast } from '../Toast';\nimport albums from '../assets/json/album.json';\n\nconst Search = () => {\n  _s();\n\n  var JsonAlbums = albums;\n  console.log(JsonAlbums);\n  const [busy, setBusy] = useState(false);\n\n  async function share(value) {\n    setBusy(true);\n    const res = await shareAlbum(value);\n    toast('Album Shared');\n    setBusy(false);\n  }\n\n  const [showAlert, setShowAlert] = useState(false);\n\n  function addAlbum(data) {\n    JsonAlbums['album'].push({\n      title: data.title,\n      artist: data.artist,\n      date_sortie: data.date_sortie,\n      length: data.length,\n      nbr_song: data.nbr_song,\n      cover: data.cover,\n      spotify: data.spotify\n    });\n    console.log(JsonAlbums);\n  }\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IonTitle, {\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n          onClick: () => setShowAlert(true),\n          expand: \"block\",\n          children: \"Add Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      fullscreen: true,\n      children: [/*#__PURE__*/_jsxDEV(IonAlert, {\n        isOpen: showAlert,\n        onDidDismiss: () => setShowAlert(false),\n        cssClass: \"my-custom-class\",\n        header: 'Add Album',\n        inputs: [{\n          name: 'title',\n          type: 'text',\n          placeholder: 'Title'\n        }, {\n          name: 'artist',\n          type: 'text',\n          placeholder: 'Artist'\n        }, {\n          name: 'date_sortie',\n          type: 'text',\n          placeholder: 'Date'\n        }, // input date with min & max\n        {\n          name: 'length',\n          type: 'text',\n          placeholder: 'Length'\n        }, // input date without min nor max\n        {\n          name: 'nbr_song',\n          type: 'text',\n          placeholder: 'Number Of Songs'\n        }, {\n          name: 'cover',\n          type: 'text',\n          placeholder: 'Cover'\n        }, {\n          name: 'spotify',\n          type: 'text',\n          placeholder: \"Spotify Link\"\n        }],\n        buttons: [{\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Ok',\n          handler: data => {\n            console.log('Confirm Ok');\n            addAlbum(data);\n          }\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), JsonAlbums.album.map((alb, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(IonCard, {\n          children: [/*#__PURE__*/_jsxDEV(IonImg, {\n            src: alb.cover\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(IonCardHeader, {\n            children: [/*#__PURE__*/_jsxDEV(IonCardSubtitle, {\n              children: alb.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(IonCardTitle, {\n              children: alb.artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n            children: [alb.length, alb.nbr_song, alb.date_sortie, /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                src: alb.spotify,\n                width: \"300\",\n                height: \"380\",\n                allow: \"encrypted-media\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n            onClick: () => share('{alb.title}'),\n            children: \" Partager \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"W7DXD9DuGmy405XDFuiS9l4F48c=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/romai/Documents/Cours/IHM/Projet_M2/InstaSound/InstaSound/src/pages/Search.tsx"],"names":["React","useState","IonAlert","IonButton","IonCard","IonCardContent","IonCardHeader","IonCardSubtitle","IonCardTitle","IonContent","IonHeader","IonImg","IonPage","IonTitle","IonToolbar","shareAlbum","toast","albums","Search","JsonAlbums","console","log","busy","setBusy","share","value","res","showAlert","setShowAlert","addAlbum","data","push","title","artist","date_sortie","length","nbr_song","cover","spotify","name","type","placeholder","text","role","cssClass","handler","album","map","alb","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { IonAlert, IonButton, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonCardTitle, IonContent, IonHeader, IonImg, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport ExploreContainer from '../components/ExploreContainer';\nimport {shareAlbum} from '../FirebaseConfig'\nimport './Search.css';\nimport { toast } from '../Toast';\nimport albums from '../assets/json/album.json';\n\nconst Search: React.FC = () => {\n\n  var JsonAlbums = albums\n  console.log(JsonAlbums)\n  const [busy, setBusy] = useState<boolean>(false)\n\n  async function share(value: string) {\n      setBusy(true)\n      const res = await shareAlbum(value)\n      toast('Album Shared')\n      setBusy(false)\n  }\n\n  const [showAlert, setShowAlert] = useState(false);\n\n  function addAlbum(data: { title: any; artist: any; date_sortie: any; length: any; nbr_song: any; cover: any; spotify: any; }){\n    JsonAlbums['album'].push({title: data.title, artist:data.artist, date_sortie:data.date_sortie, \n                    length: data.length, nbr_song: data.nbr_song, cover: data.cover, spotify: data.spotify});\n    console.log(JsonAlbums)\n  }\n  \n\n  return (\n\n    \n\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Search</IonTitle>\n          <IonButton onClick={() => setShowAlert(true)} expand=\"block\">Add Album</IonButton>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n      <IonAlert\n          isOpen={showAlert}\n          onDidDismiss={() => setShowAlert(false)}\n          cssClass='my-custom-class'\n          header={'Add Album'}\n          inputs={[\n            {\n              name: 'title',\n              type: 'text',\n              placeholder: 'Title'\n            },\n            {\n              name: 'artist',\n              type: 'text',\n              placeholder: 'Artist'\n            },\n            {\n              name: 'date_sortie',\n              type: 'text',\n              placeholder: 'Date'\n            },\n            // input date with min & max\n            {\n              name: 'length',\n              type: 'text',\n              placeholder: 'Length'\n            },\n            // input date without min nor max\n            {\n              name: 'nbr_song',\n              type: 'text',\n              placeholder: 'Number Of Songs'\n            },\n            {\n              name: 'cover',\n              type: 'text',\n              placeholder: 'Cover'\n            },\n            {\n              name: 'spotify',\n              type: 'text',\n              placeholder: \"Spotify Link\"\n            },\n          ]}\n          buttons={[\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              cssClass: 'secondary',\n              handler: () => {\n                console.log('Confirm Cancel');\n              }\n            },\n            {\n              text: 'Ok',\n              handler: data => {\n                console.log('Confirm Ok');\n                addAlbum(data);\n              }\n            }\n          ]}\n        />\n      {JsonAlbums.album.map((alb,i) => (\n      <><IonCard>\n      <IonImg src={alb.cover}/>\n          <IonCardHeader>\n            <IonCardSubtitle>{alb.title}</IonCardSubtitle>\n            <IonCardTitle>{alb.artist}</IonCardTitle>\n          </IonCardHeader>\n\n          <IonCardContent>\n            {alb.length}{alb.nbr_song}{alb.date_sortie}\n            <p><iframe src={alb.spotify} width=\"300\" height=\"380\" allow=\"encrypted-media\"></iframe></p>\n      </IonCardContent>\n      <IonButton onClick={() => share('{alb.title}')}> Partager </IonButton>\n        </IonCard> </>))}\n      \n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}