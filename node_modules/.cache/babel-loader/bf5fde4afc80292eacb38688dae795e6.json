{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Users\\\\Ionic\\\\src\\\\pages\\\\Search.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { IonAlert, IonButton, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonCardTitle, IonContent, IonIcon, IonImg, IonPage, IonSearchbar, IonText } from '@ionic/react';\nimport { getEmail } from '../FirebaseConfig';\nimport './Search.css';\nimport albums from '../assets/json/album.json';\nimport { share } from './Fil';\nimport { shareSocialOutline } from 'ionicons/icons';\n\nconst Search = () => {\n  _s();\n\n  var JsonAlbums = albums;\n  console.log(JsonAlbums);\n  const [busy, setBusy] = useState(false);\n  const username = getEmail();\n  const [showAlert, setShowAlert] = useState(false);\n\n  function addAlbum(data) {\n    JsonAlbums['album'].unshift({\n      title: data.title,\n      artist: data.artist,\n      date_sortie: data.date_sortie,\n      length: data.length,\n      nbr_song: data.nbr_song,\n      cover: data.cover,\n      spotify: data.spotify\n    });\n    console.log(JsonAlbums);\n  }\n\n  function isLogIn() {\n    const email = getEmail();\n\n    if (email) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(IonSearchbar, {\n          placeholder: \"Search Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n          onClick: () => setShowAlert(true),\n          expand: \"block\",\n          children: \"Add Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n          children: [/*#__PURE__*/_jsxDEV(IonAlert, {\n            isOpen: showAlert,\n            onDidDismiss: () => setShowAlert(false),\n            cssClass: \"my-custom-class\",\n            header: 'Add Album',\n            inputs: [{\n              name: 'title',\n              type: 'text',\n              placeholder: 'Title'\n            }, {\n              name: 'artist',\n              type: 'text',\n              placeholder: 'Artist'\n            }, {\n              name: 'date_sortie',\n              type: 'text',\n              placeholder: 'Date'\n            }, // input date with min & max\n            {\n              name: 'length',\n              type: 'text',\n              placeholder: 'Length'\n            }, // input date without min nor max\n            {\n              name: 'nbr_song',\n              type: 'text',\n              placeholder: 'Number Of Songs'\n            }, {\n              name: 'cover',\n              type: 'text',\n              placeholder: 'Cover'\n            }, {\n              name: 'spotify',\n              type: 'text',\n              placeholder: \"Spotify Link\"\n            }],\n            buttons: [{\n              text: 'Cancel',\n              role: 'cancel',\n              cssClass: 'secondary',\n              handler: () => {\n                console.log('Confirm Cancel');\n              }\n            }, {\n              text: 'Ok',\n              handler: data => {\n                console.log('Confirm Ok');\n                addAlbum(data);\n              }\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 5\n          }, this), JsonAlbums.album.map((alb, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(IonCard, {\n              children: [/*#__PURE__*/_jsxDEV(IonImg, {\n                src: alb.cover,\n                alt: \"Images cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(IonCardHeader, {\n                id: \"cardHeaderSearch\",\n                children: [/*#__PURE__*/_jsxDEV(IonCardTitle, {\n                  children: alb.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(IonCardSubtitle, {\n                  children: [\"Album par \", alb.artist, \" - \", alb.date_sortie]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"iframeSearch\",\n                  children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                    src: alb.spotify,\n                    width: \"100%\",\n                    height: \"300\",\n                    allow: \"encrypted-media\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 30\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: alb.date_sortie\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [alb.nbr_song, \" titres | \", alb.length, \" min\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n                class: \"btnShare\",\n                onClick: () => share(alb.title, alb.artist, alb.date_sortie, alb.length, alb.nbr_song, alb.cover, alb.spotify),\n                children: [/*#__PURE__*/_jsxDEV(IonIcon, {\n                  icon: shareSocialOutline\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 5\n                }, this), \" Share  \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 7\n            }, this), \" \"]\n          }, void 0, true))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }, this), \" \"]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(IonText, {\n          children: \" You need to log in to acess to this page !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n          href: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: isLogIn()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"W7DXD9DuGmy405XDFuiS9l4F48c=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["D:/Users/Ionic/src/pages/Search.tsx"],"names":["React","useState","IonAlert","IonButton","IonCard","IonCardContent","IonCardHeader","IonCardSubtitle","IonCardTitle","IonContent","IonIcon","IonImg","IonPage","IonSearchbar","IonText","getEmail","albums","share","shareSocialOutline","Search","JsonAlbums","console","log","busy","setBusy","username","showAlert","setShowAlert","addAlbum","data","unshift","title","artist","date_sortie","length","nbr_song","cover","spotify","isLogIn","email","name","type","placeholder","text","role","cssClass","handler","album","map","alb","i"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,EAAuCC,cAAvC,EAAuDC,aAAvD,EAAsEC,eAAtE,EAAuFC,YAAvF,EAAqGC,UAArG,EAA4HC,OAA5H,EAAqIC,MAArI,EAA6IC,OAA7I,EAAsJC,YAAtJ,EAAoKC,OAApK,QAAyM,cAAzM;AAEA,SAAQC,QAAR,QAAmC,mBAAnC;AACA,OAAO,cAAP;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAAQC,KAAR,QAAoB,OAApB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;;AAEA,MAAMC,MAAgB,GAAG,MAAM;AAAA;;AAE7B,MAAIC,UAAU,GAAGJ,MAAjB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAU,KAAV,CAAhC;AACA,QAAMwB,QAAQ,GAAGV,QAAQ,EAAzB;AAEA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAAC,KAAD,CAA1C;;AAEA,WAAS2B,QAAT,CAAkBC,IAAlB,EAA6H;AAC3HT,IAAAA,UAAU,CAAC,OAAD,CAAV,CAAoBU,OAApB,CAA4B;AAACC,MAAAA,KAAK,EAAEF,IAAI,CAACE,KAAb;AAAoBC,MAAAA,MAAM,EAACH,IAAI,CAACG,MAAhC;AAAwCC,MAAAA,WAAW,EAACJ,IAAI,CAACI,WAAzD;AACZC,MAAAA,MAAM,EAAEL,IAAI,CAACK,MADD;AACSC,MAAAA,QAAQ,EAAEN,IAAI,CAACM,QADxB;AACkCC,MAAAA,KAAK,EAAEP,IAAI,CAACO,KAD9C;AACqDC,MAAAA,OAAO,EAAER,IAAI,CAACQ;AADnE,KAA5B;AAEAhB,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD;;AAED,WAASkB,OAAT,GAAkB;AAChB,UAAMC,KAAK,GAAGxB,QAAQ,EAAtB;;AACA,QAAIwB,KAAJ,EAAU;AACR,0BAAO;AAAA,gCACL,QAAC,YAAD;AAAc,UAAA,WAAW,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADK,eAEL,QAAC,SAAD;AAAW,UAAA,OAAO,EAAE,MAAMZ,YAAY,CAAC,IAAD,CAAtC;AAA8C,UAAA,MAAM,EAAC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFK,eAIT,QAAC,UAAD;AAAA,kCACA,QAAC,QAAD;AACI,YAAA,MAAM,EAAED,SADZ;AAEI,YAAA,YAAY,EAAE,MAAMC,YAAY,CAAC,KAAD,CAFpC;AAGI,YAAA,QAAQ,EAAC,iBAHb;AAII,YAAA,MAAM,EAAE,WAJZ;AAKI,YAAA,MAAM,EAAE,CACN;AACEa,cAAAA,IAAI,EAAE,OADR;AAEEC,cAAAA,IAAI,EAAE,MAFR;AAGEC,cAAAA,WAAW,EAAE;AAHf,aADM,EAMN;AACEF,cAAAA,IAAI,EAAE,QADR;AAEEC,cAAAA,IAAI,EAAE,MAFR;AAGEC,cAAAA,WAAW,EAAE;AAHf,aANM,EAWN;AACEF,cAAAA,IAAI,EAAE,aADR;AAEEC,cAAAA,IAAI,EAAE,MAFR;AAGEC,cAAAA,WAAW,EAAE;AAHf,aAXM,EAgBN;AACA;AACEF,cAAAA,IAAI,EAAE,QADR;AAEEC,cAAAA,IAAI,EAAE,MAFR;AAGEC,cAAAA,WAAW,EAAE;AAHf,aAjBM,EAsBN;AACA;AACEF,cAAAA,IAAI,EAAE,UADR;AAEEC,cAAAA,IAAI,EAAE,MAFR;AAGEC,cAAAA,WAAW,EAAE;AAHf,aAvBM,EA4BN;AACEF,cAAAA,IAAI,EAAE,OADR;AAEEC,cAAAA,IAAI,EAAE,MAFR;AAGEC,cAAAA,WAAW,EAAE;AAHf,aA5BM,EAiCN;AACEF,cAAAA,IAAI,EAAE,SADR;AAEEC,cAAAA,IAAI,EAAE,MAFR;AAGEC,cAAAA,WAAW,EAAE;AAHf,aAjCM,CALZ;AA4CI,YAAA,OAAO,EAAE,CACP;AACEC,cAAAA,IAAI,EAAE,QADR;AAEEC,cAAAA,IAAI,EAAE,QAFR;AAGEC,cAAAA,QAAQ,EAAE,WAHZ;AAIEC,cAAAA,OAAO,EAAE,MAAM;AACbzB,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AANH,aADO,EASP;AACEqB,cAAAA,IAAI,EAAE,IADR;AAEEG,cAAAA,OAAO,EAAEjB,IAAI,IAAI;AACfR,gBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAM,gBAAAA,QAAQ,CAACC,IAAD,CAAR;AACD;AALH,aATO;AA5Cb;AAAA;AAAA;AAAA;AAAA,kBADA,EA+DCT,UAAU,CAAC2B,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,GAAD,EAAKC,CAAL,kBACtB;AAAA,oCAAE,QAAC,OAAD;AAAA,sCACA,QAAC,MAAD;AAAQ,gBAAA,GAAG,EAAED,GAAG,CAACb,KAAjB;AAAwB,gBAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA,QAAC,aAAD;AAAe,gBAAA,EAAE,EAAC,kBAAlB;AAAA,wCACA,QAAC,YAAD;AAAA,4BAAea,GAAG,CAAClB;AAAnB;AAAA;AAAA;AAAA;AAAA,wBADA,eAEA,QAAC,eAAD;AAAA,2CAA4BkB,GAAG,CAACjB,MAAhC,SAA2CiB,GAAG,CAAChB,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFA,eAMA,QAAC,cAAD;AAAA,wCACE;AAAG,kBAAA,EAAE,EAAC,cAAN;AAAA,yCAAqB;AAAQ,oBAAA,GAAG,EAAEgB,GAAG,CAACZ,OAAjB;AAA0B,oBAAA,KAAK,EAAC,MAAhC;AAAuC,oBAAA,MAAM,EAAC,KAA9C;AAAoD,oBAAA,KAAK,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA,4BAAIY,GAAG,CAAChB;AAAR;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAA,6BAAIgB,GAAG,CAACd,QAAR,gBAA4Bc,GAAG,CAACf,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,sBANA,eAYF,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,UAAjB;AAA4B,gBAAA,OAAO,EAAE,MAAMjB,KAAK,CAACgC,GAAG,CAAClB,KAAL,EAAWkB,GAAG,CAACjB,MAAf,EAAsBiB,GAAG,CAAChB,WAA1B,EAAsCgB,GAAG,CAACf,MAA1C,EAAiDe,GAAG,CAACd,QAArD,EAA8Dc,GAAG,CAACb,KAAlE,EAAwEa,GAAG,CAACZ,OAA5E,CAAhD;AAAA,wCACA,QAAC,OAAD;AAAS,kBAAA,IAAI,EAAEnB;AAAf;AAAA;AAAA;AAAA;AAAA,wBADA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZE;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAF;AAAA,0BADC,CA/DD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJS;AAAA,sBAAP;AAqFD,KAtFD,MAuFI;AACF,0BAAO;AAAA,gCAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAF,eACP,QAAC,SAAD;AAAW,UAAA,IAAI,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADO;AAAA,sBAAP;AAED;AACF;;AAGD,sBAIE,QAAC,OAAD;AAAA,cACGoB,OAAO;AADV;AAAA;AAAA;AAAA;AAAA,UAJF;AAQD,CAvHD;;GAAMnB,M;;KAAAA,M;AAyHN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { IonAlert, IonButton, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonCardTitle, IonContent, IonHeader, IonIcon, IonImg, IonPage, IonSearchbar, IonText, IonTitle, IonToolbar } from '@ionic/react';\r\nimport ExploreContainer from '../components/ExploreContainer';\r\nimport {getEmail, shareAlbum} from '../FirebaseConfig'\r\nimport './Search.css';\r\nimport { toast } from '../Toast';\r\nimport albums from '../assets/json/album.json';\r\nimport {share} from './Fil'\r\nimport { shareSocialOutline } from 'ionicons/icons';\r\n\r\nconst Search: React.FC = () => {\r\n\r\n  var JsonAlbums = albums\r\n  console.log(JsonAlbums)\r\n  const [busy, setBusy] = useState<boolean>(false)\r\n  const username = getEmail()\r\n\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  function addAlbum(data: { title: any; artist: any; date_sortie: any; length: any; nbr_song: any; cover: any; spotify: any; }){\r\n    JsonAlbums['album'].unshift({title: data.title, artist:data.artist, date_sortie:data.date_sortie, \r\n                    length: data.length, nbr_song: data.nbr_song, cover: data.cover, spotify: data.spotify});\r\n    console.log(JsonAlbums)\r\n  }\r\n\r\n  function isLogIn(){\r\n    const email = getEmail();\r\n    if (email){\r\n      return <>\r\n        <IonSearchbar placeholder=\"Search Album\"></IonSearchbar>\r\n        <IonButton onClick={() => setShowAlert(true)} expand=\"block\">Add Album</IonButton>\r\n  \r\n    <IonContent >\r\n    <IonAlert\r\n        isOpen={showAlert}\r\n        onDidDismiss={() => setShowAlert(false)}\r\n        cssClass='my-custom-class'\r\n        header={'Add Album'}\r\n        inputs={[\r\n          {\r\n            name: 'title',\r\n            type: 'text',\r\n            placeholder: 'Title'\r\n          },\r\n          {\r\n            name: 'artist',\r\n            type: 'text',\r\n            placeholder: 'Artist'\r\n          },\r\n          {\r\n            name: 'date_sortie',\r\n            type: 'text',\r\n            placeholder: 'Date'\r\n          },\r\n          // input date with min & max\r\n          {\r\n            name: 'length',\r\n            type: 'text',\r\n            placeholder: 'Length'\r\n          },\r\n          // input date without min nor max\r\n          {\r\n            name: 'nbr_song',\r\n            type: 'text',\r\n            placeholder: 'Number Of Songs'\r\n          },\r\n          {\r\n            name: 'cover',\r\n            type: 'text',\r\n            placeholder: 'Cover'\r\n          },\r\n          {\r\n            name: 'spotify',\r\n            type: 'text',\r\n            placeholder: \"Spotify Link\"\r\n          },\r\n        ]}\r\n        buttons={[\r\n          {\r\n            text: 'Cancel',\r\n            role: 'cancel',\r\n            cssClass: 'secondary',\r\n            handler: () => {\r\n              console.log('Confirm Cancel');\r\n            }\r\n          },\r\n          {\r\n            text: 'Ok',\r\n            handler: data => {\r\n              console.log('Confirm Ok');\r\n              addAlbum(data);\r\n            }\r\n          }\r\n        ]}\r\n      />\r\n    {JsonAlbums.album.map((alb,i) => (\r\n    <><IonCard>\r\n      <IonImg src={alb.cover} alt=\"Images cover\" />\r\n      <IonCardHeader id=\"cardHeaderSearch\">\r\n      <IonCardTitle>{alb.title}</IonCardTitle>\r\n      <IonCardSubtitle>Album par {alb.artist} - {alb.date_sortie}</IonCardSubtitle>\r\n      </IonCardHeader>\r\n      <IonCardContent>\r\n        <p id=\"iframeSearch\"><iframe src={alb.spotify} width=\"100%\" height=\"300\" allow=\"encrypted-media\"></iframe></p>\r\n        <p>{alb.date_sortie}</p>\r\n        <p>{alb.nbr_song} titres | {alb.length} min</p>\r\n      </IonCardContent>\r\n      \r\n    <IonButton class=\"btnShare\" onClick={() => share(alb.title,alb.artist,alb.date_sortie,alb.length,alb.nbr_song,alb.cover,alb.spotify)}> \r\n    <IonIcon icon={shareSocialOutline} /> Share  </IonButton>\r\n      </IonCard> </>))}\r\n    \r\n    </IonContent> </>\r\n    }\r\n    else{\r\n      return <><IonText> You need to log in to acess to this page !</IonText>\r\n      <IonButton href=\"/login\">Login</IonButton></>\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n\r\n    \r\n\r\n    <IonPage>\r\n      {isLogIn()}\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}