{"ast":null,"code":"/* Firebase imports */\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport { toast } from './Toast'; //Mettre dans un fichier séparé et dans le gitignore\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDGmggnzRETkiE0Nq6ECOlApREsrsL8Hj4\",\n  authDomain: \"instasound-d215c.firebaseapp.com\",\n  databaseURL: \"https://instasound-d215c.firebaseio.com\",\n  projectId: \"instasound-d215c\",\n  storageBucket: \"instasound-d215c.appspot.com\",\n  messagingSenderId: \"206853779770\",\n  appId: \"1:206853779770:web:7880729018ea84c7a36003\",\n  measurementId: \"G-F60T0EN8LM\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n} else {\n  firebase.app(); // if already initialized, use that one\n}\n\nexport async function loginUser(username, password) {\n  try {\n    const auth = firebase.auth();\n    const res = await auth.signInWithEmailAndPassword(username, password);\n    console.log(res);\n    return true;\n  } catch (error) {\n    toast(error.message, 4000);\n    return false;\n  }\n}\nexport async function registerUser(email, username, password) {\n  try {\n    const user = firebase.auth().currentUser;\n    const res = await firebase.auth().createUserWithEmailAndPassword(email, password).then(function () {\n      if (user) {\n        saveUser(email, username, user.uid);\n        return user.updateProfile({\n          displayName: username\n        });\n      }\n\n      console.log(res);\n    });\n  } catch (error) {\n    toast(error.message, 4000);\n    return false;\n  }\n}\n\nasync function saveUser(email, username, uid) {\n  console.log(\"email ou pas email\");\n  var firebaseRef = firebase.database().ref();\n  firebaseRef.child(\"UserData/\" + uid + \"/username\").set(username);\n  firebaseRef.child(\"UserData/\" + uid + \"/email\").set(email);\n}\n\nexport async function logOutUser() {\n  const auth = firebase.auth();\n  auth.signOut().then(() => {\n    console.log('user signed out');\n  });\n}\n/*export function getAllUser(this: string[]){\r\n    //var listUsername: Array<string> = [];\r\n    var self = this\r\n    var firebaseRef = firebase.database().ref(\"UserData\");\r\n    //console.log(listUsername)\r\n    firebaseRef.once(\"value\") \r\n    .then(function(snapshot) { \r\n    snapshot.forEach(\r\n    function(childSnapshot) { \r\n     //console.log(listUsername);\r\n     var key = childSnapshot.key;   \r\n     var username = childSnapshot.val().username; \r\n     self.push(username);\r\n     console.log(self)\r\n    });\r\n    \r\n})   ;\r\nreturn self;\r\n};\r\n\r\nexport function getAllUser(){\r\nvar ref = firebase.database().ref(\"UserData\");\r\nref.on(\"child_added\", function(childSnapshot) {\r\n  var listUsername: Array<string> = []\r\n  var username = childSnapshot.val().username;\r\n  listUsername.push(username);\r\n});\r\nconsole.log(listUsername)}\r\n*/\n\nexport async function shareAlbum(initialValue) {\n  var firebaseRef = firebase.database().ref();\n  var user = firebase.auth().currentUser;\n  console.log(user);\n\n  if (user) {\n    firebaseRef.child(\"Album\").set(user.email);\n  }\n}\n;\nexport function getEmail() {\n  var user = firebase.auth().currentUser;\n\n  if (user) {\n    return user.email;\n  }\n}\nexport default firebase;","map":{"version":3,"sources":["C:/Users/romai/Documents/Cours/IHM/Projet_M2/InstaSound/InstaSound/src/FirebaseConfig.ts"],"names":["firebase","toast","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","app","loginUser","username","password","auth","res","signInWithEmailAndPassword","console","log","error","message","registerUser","email","user","currentUser","createUserWithEmailAndPassword","then","saveUser","uid","updateProfile","displayName","firebaseRef","database","ref","child","set","logOutUser","signOut","shareAlbum","initialValue","getEmail"],"mappings":"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","sourcesContent":["/* Firebase imports */\r\nimport React from 'react'; \r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\nimport { useDocument } from 'react-firebase-hooks/firestore';\r\nimport {toast} from './Toast';\r\n\r\n//Mettre dans un fichier séparé et dans le gitignore\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDGmggnzRETkiE0Nq6ECOlApREsrsL8Hj4\",\r\n  authDomain: \"instasound-d215c.firebaseapp.com\",\r\n  databaseURL: \"https://instasound-d215c.firebaseio.com\",\r\n  projectId: \"instasound-d215c\",\r\n  storageBucket: \"instasound-d215c.appspot.com\",\r\n  messagingSenderId: \"206853779770\",\r\n  appId: \"1:206853779770:web:7880729018ea84c7a36003\",\r\n  measurementId: \"G-F60T0EN8LM\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nexport async function loginUser(username: string, password:string) {\r\n    try{\r\n        const auth = firebase.auth()\r\n        const res = await auth.signInWithEmailAndPassword(username, password)\r\n        console.log(res)\r\n        return true\r\n    } catch (error) {\r\n        toast(error.message,4000)\r\n        return false\r\n    }\r\n    \r\n}\r\n\r\nexport async function registerUser(email:string, username:string, password:string){\r\n    try {\r\n        const user = firebase.auth().currentUser;\r\n        const res = await firebase.auth().createUserWithEmailAndPassword(email, password).then(function() {\r\n            if (user) {\r\n                saveUser(email,username,user.uid)\r\n                return user.updateProfile({\r\n              displayName: username\r\n            })}\r\n        console.log(res);\r\n    })} catch(error) {\r\n        toast(error.message,4000)\r\n        return false\r\n    }\r\n}\r\n\r\nasync function saveUser(email: string,username: string,uid: string){\r\n    console.log(\"email ou pas email\");\r\n    var firebaseRef = firebase.database().ref();\r\n    firebaseRef.child(\"UserData/\"+uid+\"/username\").set(username);\r\n    firebaseRef.child(\"UserData/\"+uid+\"/email\").set(email);\r\n}\r\n\r\nexport async function logOutUser(){\r\n    const auth = firebase.auth();\r\n    auth.signOut().then(() => {\r\n        console.log('user signed out');\r\n    });\r\n}\r\n\r\n/*export function getAllUser(this: string[]){\r\n    //var listUsername: Array<string> = [];\r\n    var self = this\r\n    var firebaseRef = firebase.database().ref(\"UserData\");\r\n    //console.log(listUsername)\r\n    firebaseRef.once(\"value\") \r\n    .then(function(snapshot) { \r\n    snapshot.forEach(\r\n    function(childSnapshot) { \r\n     //console.log(listUsername);\r\n     var key = childSnapshot.key;   \r\n     var username = childSnapshot.val().username; \r\n     self.push(username);\r\n     console.log(self)\r\n    });\r\n    \r\n})   ;\r\nreturn self;\r\n};\r\n\r\nexport function getAllUser(){\r\nvar ref = firebase.database().ref(\"UserData\");\r\nref.on(\"child_added\", function(childSnapshot) {\r\n  var listUsername: Array<string> = []\r\n  var username = childSnapshot.val().username;\r\n  listUsername.push(username);\r\n});\r\nconsole.log(listUsername)}\r\n*/\r\n\r\nexport async function shareAlbum(initialValue: string) {\r\n    var firebaseRef = firebase.database().ref();\r\n    var user = firebase.auth().currentUser;\r\n    console.log(user)\r\n\r\n    if (user) {\r\n        firebaseRef.child(\"Album\").set(user.email)\r\n    } \r\n    \r\n    };\r\n\r\nexport function getEmail(){\r\n    var user = firebase.auth().currentUser;\r\n    if (user) {\r\n        return user.email;\r\n    }\r\n}\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}