{"ast":null,"code":"/* Firebase imports */\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport { toast } from './Toast'; //Mettre dans un fichier séparé et dans le gitignore\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDGmggnzRETkiE0Nq6ECOlApREsrsL8Hj4\",\n  authDomain: \"instasound-d215c.firebaseapp.com\",\n  databaseURL: \"https://instasound-d215c.firebaseio.com\",\n  projectId: \"instasound-d215c\",\n  storageBucket: \"instasound-d215c.appspot.com\",\n  messagingSenderId: \"206853779770\",\n  appId: \"1:206853779770:web:7880729018ea84c7a36003\",\n  measurementId: \"G-F60T0EN8LM\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport async function loginUser(username, password) {\n  try {\n    const res = await firebase.auth().signInWithEmailAndPassword(username, password);\n    console.log(res);\n    return true;\n  } catch (error) {\n    toast(error.message, 4000);\n    return false;\n  }\n}\nexport async function registerUser(email, username, password) {\n  try {\n    const user = firebase.auth().currentUser;\n\n    if (user) {\n      saveUser(email);\n    }\n\n    const res = await firebase.auth().createUserWithEmailAndPassword(email, password).then(function () {\n      if (user) {\n        return user.updateProfile({\n          displayName: username\n        });\n      }\n\n      console.log(res);\n    });\n  } catch (error) {\n    toast(error.message, 4000);\n    return false;\n  }\n}\n\nfunction saveUser(email) {\n  console.log(\"email ou pas email\");\n  var firebaseRef = firebase.database().ref();\n  firebaseRef.child(\"UserData/User/email\").set(email);\n}\n\nexport async function getAllUser() {\n  var firebaseRef = firebase.database().ref();\n  console.log(firebaseRef.child(\"User\"));\n}\nexport async function shareAlbum(initialValue) {\n  var firebaseRef = firebase.database().ref();\n  var user = firebase.auth().currentUser;\n  console.log(user);\n\n  if (user) {\n    firebaseRef.child(\"Album\").set(user.email);\n  }\n}\n;\nexport function getUserName() {\n  var user = firebase.auth().currentUser;\n\n  if (user) {\n    return user.displayName;\n  }\n}","map":{"version":3,"sources":["C:/Users/romai/Documents/Cours/IHM/Projet_M2/InstaSound/InstaSound/src/FirebaseConfig.ts"],"names":["firebase","toast","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","loginUser","username","password","res","auth","signInWithEmailAndPassword","console","log","error","message","registerUser","email","user","currentUser","saveUser","createUserWithEmailAndPassword","then","updateProfile","displayName","firebaseRef","database","ref","child","set","getAllUser","shareAlbum","initialValue","getUserName"],"mappings":"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","sourcesContent":["/* Firebase imports */\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\nimport { useDocument } from 'react-firebase-hooks/firestore';\r\nimport {toast} from './Toast';\r\n\r\n//Mettre dans un fichier séparé et dans le gitignore\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDGmggnzRETkiE0Nq6ECOlApREsrsL8Hj4\",\r\n  authDomain: \"instasound-d215c.firebaseapp.com\",\r\n  databaseURL: \"https://instasound-d215c.firebaseio.com\",\r\n  projectId: \"instasound-d215c\",\r\n  storageBucket: \"instasound-d215c.appspot.com\",\r\n  messagingSenderId: \"206853779770\",\r\n  appId: \"1:206853779770:web:7880729018ea84c7a36003\",\r\n  measurementId: \"G-F60T0EN8LM\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport async function loginUser(username: string, password:string) {\r\n    try{\r\n        const res = await firebase.auth().signInWithEmailAndPassword(username, password)\r\n        console.log(res)\r\n        return true\r\n    } catch (error) {\r\n        toast(error.message,4000)\r\n        return false\r\n    }\r\n    \r\n}\r\n\r\nexport async function registerUser(email:string, username:string, password:string){\r\n    try {\r\n        const user = firebase.auth().currentUser;\r\n        if (user){\r\n            saveUser(email)\r\n        }\r\n        const res = await firebase.auth().createUserWithEmailAndPassword(email, password).then(function() {\r\n            if (user) {\r\n                return user.updateProfile({\r\n              displayName: username\r\n            })}\r\n        console.log(res);\r\n    })} catch(error) {\r\n        toast(error.message,4000)\r\n        return false\r\n    }\r\n}\r\n\r\nfunction saveUser(email: string){\r\n    console.log(\"email ou pas email\");\r\n    var firebaseRef = firebase.database().ref();\r\n    firebaseRef.child(\"UserData/User/email\").set(email);\r\n}\r\n\r\nexport async function getAllUser(){\r\n    var firebaseRef = firebase.database().ref();\r\n    console.log(firebaseRef.child(\"User\"))\r\n}\r\n\r\nexport async function shareAlbum(initialValue: string) {\r\n    var firebaseRef = firebase.database().ref();\r\n    var user = firebase.auth().currentUser;\r\n    console.log(user)\r\n\r\n    if (user) {\r\n        firebaseRef.child(\"Album\").set(user.email)\r\n    } \r\n    \r\n    };\r\n\r\nexport function getUserName(){\r\n    var user = firebase.auth().currentUser;\r\n    if (user) {\r\n        return user.displayName;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}