{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\romai\\\\Documents\\\\Cours\\\\IHM\\\\Projet_M2\\\\InstaSound\\\\InstaSound\\\\src\\\\pages\\\\Search.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { IonAlert, IonButton, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonCardTitle, IonContent, IonHeader, IonImg, IonPage, IonSearchbar, IonText, IonTitle, IonToolbar } from '@ionic/react';\nimport { getEmail } from '../FirebaseConfig';\nimport './Search.css';\nimport albums from '../assets/json/album.json';\nimport { share } from './Fil';\n\nconst Search = () => {\n  _s();\n\n  var JsonAlbums = albums;\n  console.log(JsonAlbums);\n  const [busy, setBusy] = useState(false);\n  const username = getEmail();\n  const [showAlert, setShowAlert] = useState(false);\n\n  function addAlbum(data) {\n    JsonAlbums['album'].unshift({\n      title: data.title,\n      artist: data.artist,\n      date_sortie: data.date_sortie,\n      length: data.length,\n      nbr_song: data.nbr_song,\n      cover: data.cover,\n      spotify: data.spotify\n    });\n    console.log(JsonAlbums);\n  }\n\n  function isLogIn() {\n    const email = getEmail();\n\n    if (email) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n          children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n            children: [/*#__PURE__*/_jsxDEV(IonTitle, {\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(IonSearchbar, {\n              placeholder: \"Search Album\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n              onClick: () => setShowAlert(true),\n              expand: \"block\",\n              children: \"Add Album\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n          fullscreen: true,\n          children: [/*#__PURE__*/_jsxDEV(IonAlert, {\n            isOpen: showAlert,\n            onDidDismiss: () => setShowAlert(false),\n            cssClass: \"my-custom-class\",\n            header: 'Add Album',\n            inputs: [{\n              name: 'title',\n              type: 'text',\n              placeholder: 'Title'\n            }, {\n              name: 'artist',\n              type: 'text',\n              placeholder: 'Artist'\n            }, {\n              name: 'date_sortie',\n              type: 'text',\n              placeholder: 'Date'\n            }, // input date with min & max\n            {\n              name: 'length',\n              type: 'text',\n              placeholder: 'Length'\n            }, // input date without min nor max\n            {\n              name: 'nbr_song',\n              type: 'text',\n              placeholder: 'Number Of Songs'\n            }, {\n              name: 'cover',\n              type: 'text',\n              placeholder: 'Cover'\n            }, {\n              name: 'spotify',\n              type: 'text',\n              placeholder: \"Spotify Link\"\n            }],\n            buttons: [{\n              text: 'Cancel',\n              role: 'cancel',\n              cssClass: 'secondary',\n              handler: () => {\n                console.log('Confirm Cancel');\n              }\n            }, {\n              text: 'Ok',\n              handler: data => {\n                console.log('Confirm Ok');\n                addAlbum(data);\n              }\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 5\n          }, this), JsonAlbums.album.map((alb, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(IonCard, {\n              children: [/*#__PURE__*/_jsxDEV(IonImg, {\n                src: alb.cover,\n                alt: \"dfdfd\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(IonCardHeader, {\n                children: [/*#__PURE__*/_jsxDEV(IonCardSubtitle, {\n                  children: alb.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(IonCardTitle, {\n                  children: alb.artist\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n                children: [alb.length, alb.nbr_song, alb.date_sortie, /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: alb.spotify\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n                onClick: () => share(alb.title, alb.artist, alb.date_sortie, alb.length, alb.nbr_song, alb.cover, alb.spotify),\n                children: \" Partager \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 7\n            }, this), \" \"]\n          }, void 0, true))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 5\n        }, this), \" \"]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(IonText, {\n          children: \" You need to log in to acess to this page !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n          href: \"/login\",\n          children: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: isLogIn()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"W7DXD9DuGmy405XDFuiS9l4F48c=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/romai/Documents/Cours/IHM/Projet_M2/InstaSound/InstaSound/src/pages/Search.tsx"],"names":["React","useState","IonAlert","IonButton","IonCard","IonCardContent","IonCardHeader","IonCardSubtitle","IonCardTitle","IonContent","IonHeader","IonImg","IonPage","IonSearchbar","IonText","IonTitle","IonToolbar","getEmail","albums","share","Search","JsonAlbums","console","log","busy","setBusy","username","showAlert","setShowAlert","addAlbum","data","unshift","title","artist","date_sortie","length","nbr_song","cover","spotify","isLogIn","email","name","type","placeholder","text","role","cssClass","handler","album","map","alb","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { IonAlert, IonButton, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonCardTitle, IonContent, IonHeader, IonImg, IonPage, IonSearchbar, IonText, IonTitle, IonToolbar } from '@ionic/react';\nimport ExploreContainer from '../components/ExploreContainer';\nimport {getEmail, shareAlbum} from '../FirebaseConfig'\nimport './Search.css';\nimport { toast } from '../Toast';\nimport albums from '../assets/json/album.json';\nimport {share} from './Fil'\n\nconst Search: React.FC = () => {\n\n  var JsonAlbums = albums\n  console.log(JsonAlbums)\n  const [busy, setBusy] = useState<boolean>(false)\n  const username = getEmail()\n\n  const [showAlert, setShowAlert] = useState(false);\n\n  function addAlbum(data: { title: any; artist: any; date_sortie: any; length: any; nbr_song: any; cover: any; spotify: any; }){\n    JsonAlbums['album'].unshift({title: data.title, artist:data.artist, date_sortie:data.date_sortie, \n                    length: data.length, nbr_song: data.nbr_song, cover: data.cover, spotify: data.spotify});\n    console.log(JsonAlbums)\n  }\n\n  function isLogIn(){\n    const email = getEmail();\n    if (email){\n      return <><IonHeader>\n      <IonToolbar>\n        <IonTitle>Search</IonTitle>\n        <IonSearchbar placeholder=\"Search Album\"></IonSearchbar>\n        <IonButton onClick={() => setShowAlert(true)} expand=\"block\">Add Album</IonButton>\n      </IonToolbar>\n    </IonHeader>\n    <IonContent fullscreen>\n    <IonAlert\n        isOpen={showAlert}\n        onDidDismiss={() => setShowAlert(false)}\n        cssClass='my-custom-class'\n        header={'Add Album'}\n        inputs={[\n          {\n            name: 'title',\n            type: 'text',\n            placeholder: 'Title'\n          },\n          {\n            name: 'artist',\n            type: 'text',\n            placeholder: 'Artist'\n          },\n          {\n            name: 'date_sortie',\n            type: 'text',\n            placeholder: 'Date'\n          },\n          // input date with min & max\n          {\n            name: 'length',\n            type: 'text',\n            placeholder: 'Length'\n          },\n          // input date without min nor max\n          {\n            name: 'nbr_song',\n            type: 'text',\n            placeholder: 'Number Of Songs'\n          },\n          {\n            name: 'cover',\n            type: 'text',\n            placeholder: 'Cover'\n          },\n          {\n            name: 'spotify',\n            type: 'text',\n            placeholder: \"Spotify Link\"\n          },\n        ]}\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {\n              console.log('Confirm Cancel');\n            }\n          },\n          {\n            text: 'Ok',\n            handler: data => {\n              console.log('Confirm Ok');\n              addAlbum(data);\n            }\n          }\n        ]}\n      />\n    {JsonAlbums.album.map((alb,i) => (\n    <><IonCard>\n    <IonImg src={alb.cover} alt=\"dfdfd\" />\n        <IonCardHeader>\n          <IonCardSubtitle>{alb.title}</IonCardSubtitle>\n          <IonCardTitle>{alb.artist}</IonCardTitle>\n        </IonCardHeader>\n\n        <IonCardContent>\n          {alb.length}{alb.nbr_song}{alb.date_sortie}\n          <p>{alb.spotify}</p>\n    </IonCardContent>\n    <IonButton onClick={() => share(alb.title,alb.artist,alb.date_sortie,alb.length,alb.nbr_song,alb.cover,alb.spotify)}> Partager </IonButton>\n      </IonCard> </>))}\n    \n    </IonContent> </>\n    }\n    else{\n      return <><IonText> You need to log in to acess to this page !</IonText>\n      <IonButton href=\"/login\">LOGIN</IonButton></>\n    }\n  }\n  \n\n  return (\n\n    \n\n    <IonPage>\n      {isLogIn()}\n    </IonPage>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}